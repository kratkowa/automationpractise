Musimy dopytać w którym miejscu piszemy kto za co odpowiadal

0. Dedykacja

1. Wstęp

2. Wprowadzenie do testowania oprogramowania
    1.1 Czym jest testowanie
    1.2 Testowanie jako element cylku życia oprogramowania
    1.3 Testy Manualne (tutaj biadolimy, ze to męczące)
    1.4 Testy Automatyczne (i tutaj piszemy jaka automatyzacja testów jest fajna)

3. Narzędzia do testów automatycznych
    2.1 Ranorex Studio
    2.2 Cucumber
    2.3 Katalon Studio
    2.4 Selenium
    2.5 Robot Framework (i tutaj piszemy jaki RF jest fajny)

4. Narzędzia ciągłej integracji i utrzymania projektu
    3.1 Narzędzia kontoli wersji
        3.1.1 Team Foundation Server
        3.1.2 AWS CodeCommit
        3.1.3 GIT (i tutaj piszemy jaki git jest fajny)
    3.2 Pycharm
    3.3 Geritt

5. Języki programowania wykorzystywane w automatyzacji testów (awaryjnie)
    4.1 Java
    4.2 C/C++
    4.3 Python (i tutaj piszemy jaki Python jest fajny)

6. Przygotowanie przestrzeni do utworzenia projektu
    4.1 Instalacja i konfiguracja
        4.1 Python
        4.2 PIP
        4.3 ROBOT FRAMEWORK
        4.4 Utworzenie repozytorium w systemie kontroli wersji GIT
    4.2 Tworzenie folderów konfiguracyjnych

7. Utworzenie przypadków testowych

8. Przeprowadzenie testów manualnie

9. Implementacja testów automatycznych
    7.1 Utworzenie stałych zmiennych
    7.2 Utworzenie słów kluczy
    7.3 Implmentacja kodu
        7.3.1 Przypadek testowy 1
        7.3.1 Przypadek testowy 2
        itd

10. Porównanie testów automatycznych i manualnych

11. Wnioski

12. Podsumowanie

Bibliografia